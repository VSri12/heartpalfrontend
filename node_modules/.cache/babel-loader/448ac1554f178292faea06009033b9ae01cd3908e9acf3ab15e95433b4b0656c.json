{"ast":null,"code":"var _jsxFileName = \"/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/main/GetPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./GetPrediction.css\"; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetPrediction() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [tuning, setTuning] = useState(false);\n  const staticPredictions = [{\n    id: 1,\n    palpitation: true,\n    heartRate: 120,\n    riskLevel: \"High\"\n  }, {\n    id: 2,\n    palpitation: false,\n    heartRate: 75,\n    riskLevel: \"Low\"\n  }, {\n    id: 3,\n    palpitation: true,\n    heartRate: 110,\n    riskLevel: \"Moderate\"\n  }, {\n    id: 4,\n    palpitation: false,\n    heartRate: 80,\n    riskLevel: \"Low\"\n  }, {\n    id: 5,\n    palpitation: true,\n    heartRate: 130,\n    riskLevel: \"High\"\n  }];\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please upload a CSV file\");\n      return;\n    }\n    setLoading(true);\n    setTuning(true);\n    setTimeout(() => {\n      setTuning(false);\n    }, 60000);\n    setTimeout(() => {\n      setLoading(false);\n      // Shuffle static predictions before displaying\n      setPredictions(staticPredictions.sort(() => Math.random() - 0.5));\n    }, 3000); // Simulate API delay\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload ECG Data for Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Upload & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Predicting using Random Forest...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), tuning && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tuning-message\",\n        children: \"Hyperparameter tuning ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), predictions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predictions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Palpitations Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.filter(p => p.palpitation).length > 0 ? predictions.filter(p => p.palpitation).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Heart Rate: \", item.heartRate, \" BPM | Risk Level: \", item.riskLevel]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No palpitations detected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No Palpitations Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.filter(p => !p.palpitation).length > 0 ? predictions.filter(p => !p.palpitation).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Heart Rate: \", item.heartRate, \" BPM | Risk Level: \", item.riskLevel]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"All cases show palpitations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(GetPrediction, \"59yzHnzx1wLxmjk/P+jLoiiQiJ8=\");\n_c = GetPrediction;\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GetPrediction","_s","file","setFile","predictions","setPredictions","loading","setLoading","tuning","setTuning","staticPredictions","id","palpitation","heartRate","riskLevel","handleFileChange","event","target","files","handleUpload","alert","setTimeout","sort","Math","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","filter","p","length","map","item","_c","$RefreshReg$"],"sources":["/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/main/GetPrediction.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./GetPrediction.css\"; // Import CSS for styling\n\nexport default function GetPrediction() {\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [tuning, setTuning] = useState(false);\n\n  const staticPredictions = [\n    { id: 1, palpitation: true, heartRate: 120, riskLevel: \"High\" },\n    { id: 2, palpitation: false, heartRate: 75, riskLevel: \"Low\" },\n    { id: 3, palpitation: true, heartRate: 110, riskLevel: \"Moderate\" },\n    { id: 4, palpitation: false, heartRate: 80, riskLevel: \"Low\" },\n    { id: 5, palpitation: true, heartRate: 130, riskLevel: \"High\" },\n  ];\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please upload a CSV file\");\n      return;\n    }\n\n    setLoading(true);\n    setTuning(true);\n\n    setTimeout(() => {\n      setTuning(false);\n    }, 60000);\n\n    setTimeout(() => {\n      setLoading(false);\n      // Shuffle static predictions before displaying\n      setPredictions(staticPredictions.sort(() => Math.random() - 0.5));\n    }, 3000); // Simulate API delay\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h2>Upload ECG Data for Prediction</h2>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={loading}>\n        {loading ? \"Processing...\" : \"Upload & Predict\"}\n      </button>\n\n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Predicting using Random Forest...</p>\n          {tuning && <p className=\"tuning-message\">Hyperparameter tuning ...</p>}\n        </div>\n      )}\n\n      {predictions && (\n        <div className=\"predictions-container\">\n          <h3>Predictions:</h3>\n\n          <h4>Palpitations Detected:</h4>\n          <ul>\n            {predictions.filter((p) => p.palpitation).length > 0 ? (\n              predictions\n                .filter((p) => p.palpitation)\n                .map((item) => (\n                  <li key={item.id}>\n                    Heart Rate: {item.heartRate} BPM | Risk Level: {item.riskLevel}\n                  </li>\n                ))\n            ) : (\n              <li>No palpitations detected.</li>\n            )}\n          </ul>\n\n          <h4>No Palpitations Detected:</h4>\n          <ul>\n            {predictions.filter((p) => !p.palpitation).length > 0 ? (\n              predictions\n                .filter((p) => !p.palpitation)\n                .map((item) => (\n                  <li key={item.id}>\n                    Heart Rate: {item.heartRate} BPM | Risk Level: {item.riskLevel}\n                  </li>\n                ))\n            ) : (\n              <li>All cases show palpitations.</li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}