{"ast":null,"code":"var _jsxFileName = \"/Applications/U CS/Y-3/S-2/Term Paper/Term_Paper_Application/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport PatientNavBar from './patient/PatientNavBar';\nimport AdminNavBar from './admin/AdminNavBar';\nimport MainNavBar from './main/MainNavBar';\nimport DoctorNavBar from './doctor/DoctorNavBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userLoggedIn, setUserLoggedIn] = useState({\n    admin: false,\n    patient: false,\n    doctor: false\n  });\n  useEffect(() => {\n    // Check local storage for each role\n    const adminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    const patientLoggedIn = localStorage.getItem('isPatientLoggedIn') === 'true';\n    const doctorLoggedIn = localStorage.getItem('isDoctorLoggedIn') === 'true';\n    setUserLoggedIn({\n      admin: adminLoggedIn,\n      patient: patientLoggedIn,\n      doctor: doctorLoggedIn\n    });\n  }, []);\n  const handleLogin = role => {\n    // Update local storage and state based on role\n    localStorage.setItem(`is${role}LoggedIn`, 'true');\n    setUserLoggedIn(prevState => ({\n      ...prevState,\n      [role.toLowerCase()]: true\n    }));\n  };\n  const getNavBar = () => {\n    if (userLoggedIn.admin) {\n      return /*#__PURE__*/_jsxDEV(AdminNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else if (userLoggedIn.patient) {\n      return /*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else if (userLoggedIn.doctor) {\n      return /*#__PURE__*/_jsxDEV(DoctorNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(MainNavBar, {\n        onAdminLogin: () => handleLogin('Admin'),\n        onPatientLogin: () => handleLogin('Patient'),\n        onDoctorLogin: () => handleLogin('Doctor')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI-Based Mental Health Support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: getNavBar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IONUu2VRhsPSU2lQFb0LB9+hhhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","PatientNavBar","AdminNavBar","MainNavBar","DoctorNavBar","jsxDEV","_jsxDEV","App","_s","userLoggedIn","setUserLoggedIn","admin","patient","doctor","adminLoggedIn","localStorage","getItem","patientLoggedIn","doctorLoggedIn","handleLogin","role","setItem","prevState","toLowerCase","getNavBar","fileName","_jsxFileName","lineNumber","columnNumber","onAdminLogin","onPatientLogin","onDoctorLogin","className","children","_c","$RefreshReg$"],"sources":["/Applications/U CS/Y-3/S-2/Term Paper/Term_Paper_Application/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'; \nimport PatientNavBar from './patient/PatientNavBar';\nimport AdminNavBar from './admin/AdminNavBar';\nimport MainNavBar from './main/MainNavBar';\nimport DoctorNavBar from './doctor/DoctorNavBar';\nimport './App.css';\n\nfunction App() {\n  const [userLoggedIn, setUserLoggedIn] = useState({\n    admin: false,\n    patient: false,\n    doctor: false\n  });\n\n  useEffect(() => {\n    // Check local storage for each role\n    const adminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    const patientLoggedIn = localStorage.getItem('isPatientLoggedIn') === 'true';\n    const doctorLoggedIn = localStorage.getItem('isDoctorLoggedIn') === 'true';\n\n    setUserLoggedIn({\n      admin: adminLoggedIn,\n      patient: patientLoggedIn,\n      doctor: doctorLoggedIn\n    });\n  }, []);\n\n  const handleLogin = (role) => {\n    // Update local storage and state based on role\n    localStorage.setItem(`is${role}LoggedIn`, 'true');\n    setUserLoggedIn((prevState) => ({\n      ...prevState,\n      [role.toLowerCase()]: true\n    }));\n  };\n\n  const getNavBar = () => {\n    if (userLoggedIn.admin) {\n      return <AdminNavBar />;\n    } else if (userLoggedIn.patient) {\n      return <PatientNavBar />;\n    } else if (userLoggedIn.doctor) {\n      return <DoctorNavBar />;\n    } else {\n      return (\n        <MainNavBar\n          onAdminLogin={() => handleLogin('Admin')}\n          onPatientLogin={() => handleLogin('Patient')}\n          onDoctorLogin={() => handleLogin('Doctor')}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI-Based Mental Health Support</h1>\n      <Router>\n        {getNavBar()}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}