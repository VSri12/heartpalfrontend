{"ast":null,"code":"var _jsxFileName = \"/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// import PatientNavBar from './patient/PatientNavBar';\n// import AdminNavBar from './admin/AdminNavBar';\nimport MainNavBar from './main/MainNavBar';\nimport DoctorNavBar from './doctor/DoctorNavBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState(false);\n  const [isDoctorLoggedIn, setIsDoctorLoggedIn] = useState(false);\n  useEffect(() => {\n    const adminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    const patientLoggedIn = localStorage.getItem('isPatientLoggedIn') === 'true';\n    const doctorLoggedIn = localStorage.getItem('isDoctorLoggedIn') === 'true';\n    setIsAdminLoggedIn(adminLoggedIn);\n    setIsPatientLoggedIn(patientLoggedIn);\n    setIsDoctorLoggedIn(doctorLoggedIn);\n  }, []);\n  const onAdminLogin = () => {\n    localStorage.setItem('isAdminLoggedIn', 'true');\n    setIsAdminLoggedIn(true);\n  };\n  const onPatientLogin = () => {\n    localStorage.setItem('isPatientLoggedIn', 'true');\n    setIsPatientLoggedIn(true);\n  };\n  const onDoctorLogin = () => {\n    localStorage.setItem('isDoctorLoggedIn', 'true');\n    setIsDoctorLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI-Based Mental Health Support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: isAdminLoggedIn ? /*#__PURE__*/_jsxDEV(AdminNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : isPatientLoggedIn ? /*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : isDoctorLoggedIn ? /*#__PURE__*/_jsxDEV(DoctorNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MainNavBar, {\n        onAdminLogin: onAdminLogin,\n        onPatientLogin: onPatientLogin,\n        onDoctorLogin: onDoctorLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V51/n2Uq0Hw23AgTpu5EmKE5kD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","MainNavBar","DoctorNavBar","jsxDEV","_jsxDEV","App","_s","isAdminLoggedIn","setIsAdminLoggedIn","isPatientLoggedIn","setIsPatientLoggedIn","isDoctorLoggedIn","setIsDoctorLoggedIn","adminLoggedIn","localStorage","getItem","patientLoggedIn","doctorLoggedIn","onAdminLogin","setItem","onPatientLogin","onDoctorLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","AdminNavBar","PatientNavBar","_c","$RefreshReg$"],"sources":["/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'; \n// import PatientNavBar from './patient/PatientNavBar';\n// import AdminNavBar from './admin/AdminNavBar';\nimport MainNavBar from './main/MainNavBar';\nimport DoctorNavBar from './doctor/DoctorNavBar';\nimport './App.css';\n\nfunction App() {\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState(false);\n  const [isDoctorLoggedIn, setIsDoctorLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const adminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n    const patientLoggedIn = localStorage.getItem('isPatientLoggedIn') === 'true';\n    const doctorLoggedIn = localStorage.getItem('isDoctorLoggedIn') === 'true';\n    \n    setIsAdminLoggedIn(adminLoggedIn);\n    setIsPatientLoggedIn(patientLoggedIn);\n    setIsDoctorLoggedIn(doctorLoggedIn);\n  }, []);\n\n  const onAdminLogin = () => {\n    localStorage.setItem('isAdminLoggedIn', 'true');\n    setIsAdminLoggedIn(true);\n  };\n\n  const onPatientLogin = () => {\n    localStorage.setItem('isPatientLoggedIn', 'true');\n    setIsPatientLoggedIn(true);\n  };\n\n  const onDoctorLogin = () => {\n    localStorage.setItem('isDoctorLoggedIn', 'true');\n    setIsDoctorLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI-Based Mental Health Support</h1>\n      <Router>\n        {isAdminLoggedIn ? (\n          <AdminNavBar />\n        ) : isPatientLoggedIn ? (\n          <PatientNavBar />\n        ) : isDoctorLoggedIn ? (\n          <DoctorNavBar />\n        ) : (\n          <MainNavBar\n            onAdminLogin={onAdminLogin}\n            onPatientLogin={onPatientLogin}\n            onDoctorLogin={onDoctorLogin}\n          />\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}