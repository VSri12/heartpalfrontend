{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import config from '../config';\n\n// const Prediction = () => {\n//   const [plotUrl, setPlotUrl] = useState('');\n//   const [predictedHeartRate, setPredictedHeartRate] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch heart rate plot\n//   const fetchHeartRatePlot = async () => {\n//     try {\n//       const response = await axios.get(`${config.url}/plot_heart_rate`);\n//       if (response.data && response.data.image) {\n//         setPlotUrl(`data:image/png;base64,${response.data.image}`);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching heart rate plot:', error);\n//     }\n//   };\n\n//   // Fetch heart rate prediction\n//   const fetchPrediction = async () => {\n//     try {\n//       const response = await axios.get(`${config.API_}/predict_heart_rate`);\n//       if (response.data && response.data.predicted_heart_rate !== undefined) {\n//         setPredictedHeartRate(response.data.predicted_heart_rate);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching heart rate prediction:', error);\n//     }\n//   };\n\n//   // Use useEffect to call both functions when the component mounts\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       await Promise.all([fetchHeartRatePlot(), fetchPrediction()]);\n//       setLoading(false);  // Set loading to false after both are fetched\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div style={{ textAlign: 'center' }}>\n//       <h2>Heart Rate Prediction</h2>\n\n//       {plotUrl ? (\n//         <div>\n//           <h3>Heart Rate Plot</h3>\n//           <img src={plotUrl} alt=\"Heart Rate Plot\" style={{ maxWidth: '100%', height: 'auto' }} />\n//         </div>\n//       ) : (\n//         <p>Failed to load plot.</p>\n//       )}\n\n//       {predictedHeartRate !== null ? (\n//         <div>\n//           <h3>Predicted Next Heart Rate: {predictedHeartRate.toFixed(2)} BPM</h3>\n//         </div>\n//       ) : (\n//         <p>Failed to load prediction.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Prediction;","map":{"version":3,"names":[],"sources":["/Applications/U CS/Y-3/S-2/Term Paper/Term_Paper_Application/frontend/src/doctor/Predictions.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import config from '../config';\n\n// const Prediction = () => {\n//   const [plotUrl, setPlotUrl] = useState('');\n//   const [predictedHeartRate, setPredictedHeartRate] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch heart rate plot\n//   const fetchHeartRatePlot = async () => {\n//     try {\n//       const response = await axios.get(`${config.url}/plot_heart_rate`);\n//       if (response.data && response.data.image) {\n//         setPlotUrl(`data:image/png;base64,${response.data.image}`);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching heart rate plot:', error);\n//     }\n//   };\n\n//   // Fetch heart rate prediction\n//   const fetchPrediction = async () => {\n//     try {\n//       const response = await axios.get(`${config.API_}/predict_heart_rate`);\n//       if (response.data && response.data.predicted_heart_rate !== undefined) {\n//         setPredictedHeartRate(response.data.predicted_heart_rate);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching heart rate prediction:', error);\n//     }\n//   };\n\n//   // Use useEffect to call both functions when the component mounts\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       await Promise.all([fetchHeartRatePlot(), fetchPrediction()]);\n//       setLoading(false);  // Set loading to false after both are fetched\n//     };\n    \n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div style={{ textAlign: 'center' }}>\n//       <h2>Heart Rate Prediction</h2>\n      \n//       {plotUrl ? (\n//         <div>\n//           <h3>Heart Rate Plot</h3>\n//           <img src={plotUrl} alt=\"Heart Rate Plot\" style={{ maxWidth: '100%', height: 'auto' }} />\n//         </div>\n//       ) : (\n//         <p>Failed to load plot.</p>\n//       )}\n\n//       {predictedHeartRate !== null ? (\n//         <div>\n//           <h3>Predicted Next Heart Rate: {predictedHeartRate.toFixed(2)} BPM</h3>\n//         </div>\n//       ) : (\n//         <p>Failed to load prediction.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Prediction;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}