{"ast":null,"code":"var _jsxFileName = \"/Applications/U CS/Y-3/S-2/Term Paper/Term_Paper_Application/frontend/src/doctor/Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predictions = () => {\n  _s();\n  const [prediction, setPrediction] = useState(null);\n  const [image, setImage] = useState(null);\n  const [allPredictions, setAllPredictions] = useState([]);\n  const [error, setError] = useState('');\n  const fetchCSVDataAndAnalyze = async () => {\n    try {\n      const res = await axios.get(`${config.url}/palpitation_analysis_csv`);\n      const {\n        trend_graph,\n        latest_prediction,\n        all_predictions\n      } = res.data;\n      setPrediction(latest_prediction);\n      setAllPredictions(all_predictions);\n      setImage(`data:image/png;base64,${trend_graph}`);\n      setError('');\n    } catch (err) {\n      console.error('Error analyzing CSV data:', err);\n      setError('Failed to analyze CSV heart rate data.');\n    }\n  };\n  useEffect(() => {\n    fetchCSVDataAndAnalyze();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Heart Rate Prediction (CSV)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"Latest Prediction: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4 font-semibold\",\n        children: \"Trend Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Heart Rate Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), allPredictions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4 font-semibold\",\n        children: \"All Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc ml-6\",\n        children: allPredictions.map((pred, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pred\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Predictions, \"HBfKI10RgZPjXqGTFahtRmiM2OU=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useEffect","useState","axios","config","jsxDEV","_jsxDEV","Predictions","_s","prediction","setPrediction","image","setImage","allPredictions","setAllPredictions","error","setError","fetchCSVDataAndAnalyze","res","get","url","trend_graph","latest_prediction","all_predictions","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","map","pred","index","_c","$RefreshReg$"],"sources":["/Applications/U CS/Y-3/S-2/Term Paper/Term_Paper_Application/frontend/src/doctor/Predictions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport config from '../config';\n\nconst Predictions = () => {\n  const [prediction, setPrediction] = useState(null);\n  const [image, setImage] = useState(null);\n  const [allPredictions, setAllPredictions] = useState([]);\n  const [error, setError] = useState('');\n\n  const fetchCSVDataAndAnalyze = async () => {\n    try {\n      const res = await axios.get(`${config.url}/palpitation_analysis_csv`);\n      const { trend_graph, latest_prediction, all_predictions } = res.data;\n\n      setPrediction(latest_prediction);\n      setAllPredictions(all_predictions);\n      setImage(`data:image/png;base64,${trend_graph}`);\n      setError('');\n    } catch (err) {\n      console.error('Error analyzing CSV data:', err);\n      setError('Failed to analyze CSV heart rate data.');\n    }\n  };\n\n  useEffect(() => {\n    fetchCSVDataAndAnalyze();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-2\">Heart Rate Prediction (CSV)</h1>\n\n      {error && <p className=\"text-red-500\">{error}</p>}\n\n      {prediction && <p className=\"text-lg\">Latest Prediction: <strong>{prediction}</strong></p>}\n\n      {image && (\n        <div>\n          <h2 className=\"mt-4 font-semibold\">Trend Graph</h2>\n          <img src={image} alt=\"Heart Rate Trend\" />\n        </div>\n      )}\n\n      {allPredictions.length > 0 && (\n        <div>\n          <h2 className=\"mt-4 font-semibold\">All Predictions</h2>\n          <ul className=\"list-disc ml-6\">\n            {allPredictions.map((pred, index) => (\n              <li key={index}>{pred}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Predictions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}