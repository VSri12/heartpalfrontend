{"ast":null,"code":"var _jsxFileName = \"/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/main/GetPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetPrediction() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please upload a CSV file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPredictions(response.data);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Prediction failed. Check console for details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload ECG Data for Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Upload & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), predictions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predictions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Palpitations Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.filter(p => p.palpitation).length > 0 ? predictions.filter(p => p.palpitation).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No palpitations detected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No Palpitations Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.filter(p => !p.palpitation).length > 0 ? predictions.filter(p => !p.palpitation).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"All cases show palpitations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(GetPrediction, \"wrkyQEVT8HonmkfT9PcCgwt+vSI=\");\n_c = GetPrediction;\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetPrediction","_s","file","setFile","predictions","setPredictions","loading","setLoading","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","filter","p","palpitation","length","map","item","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Applications/U CS/Y-3/S-2/CLOUD AIML/Cloud Based AIML For Mental Health Support/frontend/src/main/GetPrediction.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function GetPrediction() {\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please upload a CSV file\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setLoading(true);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/predict\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      setPredictions(response.data);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Prediction failed. Check console for details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h2>Upload ECG Data for Prediction</h2>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={loading}>\n        {loading ? \"Processing...\" : \"Upload & Predict\"}\n      </button>\n\n      {predictions && (\n        <div>\n          <h3>Predictions:</h3>\n\n          <h4>Palpitations Detected:</h4>\n          <ul>\n            {predictions.filter((p) => p.palpitation).length > 0 ? (\n              predictions\n                .filter((p) => p.palpitation)\n                .map((item, index) => <li key={index}>{JSON.stringify(item)}</li>)\n            ) : (\n              <li>No palpitations detected.</li>\n            )}\n          </ul>\n\n          <h4>No Palpitations Detected:</h4>\n          <ul>\n            {predictions.filter((p) => !p.palpitation).length > 0 ? (\n              predictions\n                .filter((p) => !p.palpitation)\n                .map((item, index) => <li key={index}>{JSON.stringify(item)}</li>)\n            ) : (\n              <li>All cases show palpitations.</li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}